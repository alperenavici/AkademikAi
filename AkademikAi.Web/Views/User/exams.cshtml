@model AkademikAi.Entity.Entites.AppUser
@{
    ViewData["Title"] = "Simülasyon Merkezi - AkademikAI";
    
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
   <link rel="stylesheet" href="~/css/dashboard.css" />
    
    <link rel="stylesheet" href="~/css/dashboard-new.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <h2 class="logo">AkademikAI</h2>
            </div>
            <nav class="sidebar-nav">
                <a href="@Url.Action("Dashboard", "User")" class="nav-link">
                    <i class="fas fa-compass"></i>
                    <span>Pusulanız</span>
                </a>
                <a href="@Url.Action("Solve", "User")" class="nav-link">
                    <i class="fas fa-brain"></i>
                    <span>Odaklanma Alanı</span>
                </a>
                <a href="@Url.Action("Performance", "User")" class="nav-link">
                    <i class="fas fa-chart-line"></i>
                    <span>MR Sonuçlarınız</span>
                </a>
                <a href="@Url.Action("Exams", "User")" class="nav-link active">
                    <i class="fas fa-clipboard-check"></i>
                    <span>Simülasyon Merkezi</span>
                </a>
                <a href="@Url.Action("Profile", "User")" class="nav-link">
                    <i class="fas fa-user-circle"></i>
                    <span>Kişisel Alan</span>
                </a>
              
            </nav>
            <div class="sidebar-footer">
                <form asp-action="Logout" asp-controller="User" method="post" style="display: inline;">
                    <button type="submit" class="logout-btn">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Çıkış Yap</span>
                    </button>
                </form>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <header class="main-header">
                <h1>Simülasyon Merkezi</h1>
                <p>Gerçek sınav koşullarında kendini test et ve performansını ölç.</p>
            </header>

            <!-- Tab Navigation -->
            <div class="tab-container">
                <div class="tab-buttons">
                    <button class="tab-button active" data-tab="ready-exams">
                        <i class="fas fa-clipboard-list"></i>
                        Hazır Sınavlar
                    </button>
                    <button class="tab-button" data-tab="custom-exams">
                        <i class="fas fa-cogs"></i>
                        Özel Test Oluştur
                    </button>
                    <button class="tab-button" data-tab="past-results">
                        <i class="fas fa-history"></i>
                        Geçmiş Sonuçlarım
                    </button>
                </div>

                <!-- Tab Content -->
                <div class="tab-content">
                    <!-- Hazır Sınavlar Tab -->
                    <div id="ready-exams" class="tab-panel active">
                        <div class="exam-grid">
                            <div class="exam-card">
                                <div class="exam-header">
                                    <h3>TYT Matematik Denemesi</h3>
                                    <span class="exam-difficulty easy">Kolay</span>
                                </div>
                                <div class="exam-details">
                                    <div class="exam-info">
                                        <span><i class="fas fa-clock"></i> 45 dakika</span>
                                        <span><i class="fas fa-question-circle"></i> 40 soru</span>
                                        <span><i class="fas fa-AppUser"></i> 1,234 katılım</span>
                                    </div>
                                    <p>TYT matematik konularını kapsayan kapsamlı deneme sınavı.</p>
                                </div>
                                <button class="btn-start-exam">
                                    <i class="fas fa-play"></i>
                                    Sınavı Başlat
                                </button>
                            </div>

                            <div class="exam-card">
                                <div class="exam-header">
                                    <h3>AYT Fizik Denemesi</h3>
                                    <span class="exam-difficulty hard">Zor</span>
                                </div>
                                <div class="exam-details">
                                    <div class="exam-info">
                                        <span><i class="fas fa-clock"></i> 60 dakika</span>
                                        <span><i class="fas fa-question-circle"></i> 30 soru</span>
                                        <span><i class="fas fa-AppUser"></i> 856 katılım</span>
                                    </div>
                                    <p>AYT fizik konularını içeren detaylı deneme sınavı.</p>
                                </div>
                                <button class="btn-start-exam">
                                    <i class="fas fa-play"></i>
                                    Sınavı Başlat
                                </button>
                            </div>

                            <div class="exam-card">
                                <div class="exam-header">
                                    <h3>TYT Genel Deneme</h3>
                                    <span class="exam-difficulty medium">Orta</span>
                                </div>
                                <div class="exam-details">
                                    <div class="exam-info">
                                        <span><i class="fas fa-clock"></i> 135 dakika</span>
                                        <span><i class="fas fa-question-circle"></i> 120 soru</span>
                                        <span><i class="fas fa-AppUser"></i> 2,156 katılım</span>
                                    </div>
                                    <p>Tüm TYT konularını kapsayan genel deneme sınavı.</p>
                                </div>
                                <button class="btn-start-exam">
                                    <i class="fas fa-play"></i>
                                    Sınavı Başlat
                                </button>
                            </div>

                            <div class="exam-card">
                                <div class="exam-header">
                                    <h3>AYT Kimya Denemesi</h3>
                                    <span class="exam-difficulty easy">Kolay</span>
                                </div>
                                <div class="exam-details">
                                    <div class="exam-info">
                                        <span><i class="fas fa-clock"></i> 45 dakika</span>
                                        <span><i class="fas fa-question-circle"></i> 25 soru</span>
                                        <span><i class="fas fa-AppUser"></i> 678 katılım</span>
                                    </div>
                                    <p>AYT kimya konularını içeren temel deneme sınavı.</p>
                                </div>
                                <button class="btn-start-exam">
                                    <i class="fas fa-play"></i>
                                    Sınavı Başlat
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Özel Test Oluştur Tab -->
                    <div id="custom-exams" class="tab-panel">
                        <div class="custom-exam-form">
                            <h3>Özel Test Oluştur</h3>
                            <form id="customExamForm" asp-action="CreateCustomExam" asp-controller="User" method="Post" class="exam-form">
                                @Html.AntiForgeryToken()
                                <div class="form-group">
                                    <label for="exam-name">Test Adı:</label>
                                    <input type="text" id="exam-name" name="TestName" placeholder="Örn: Geometri Özel Test" required>
                                </div>
                                
                                <div class="form-group">
                                    <label for="exam-subject">Ders:</label>
                                    <select id="exam-subject" name="SubjectId" required>
                                        <option value="">Ders Seçin</option>
                                        @foreach(var subject in ViewBag.Subjects)
                                        {
                                            <option value="@subject.Id">@subject.SubjectName</option>
                                        }
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label for="exam-topic">Konu:</label>
                                    <select id="exam-topic" name="TopicId" required>
                                        <option value="">Önce ders seçiniz</option>
                                    </select>
                                </div>

                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="question-count">Soru Sayısı:</label>
                                        <input type="number" id="question-count" name="QuestionCount" min="5" max="50" value="20" required>
                                    </div>
                                    <div class="form-group">
                                        <label for="exam-duration">Süre (dakika):</label>
                                        <input type="number" id="exam-duration" name="DurationMinutes" min="10" max="180" value="30" required>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="exam-difficulty">Zorluk Seviyesi:</label>
                                    <select id="exam-difficulty" name="Difficulty">
                                        <option value="1">Kolay</option>
                                        <option value="2" selected>Orta</option>
                                        <option value="3">Zor</option>
                                        <option value="0">Karışık</option>
                                    </select>
                                </div>

                                <button type="submit" class="btn-create-exam">
                                    <i class="fas fa-plus"></i>
                                    Test Oluştur
                                </button>
                            </form>
                        </div>
                    </div>

                    <!-- Geçmiş Sonuçlarım Tab -->
                    <div id="past-results" class="tab-panel">
                        <div class="results-table">
                            <div class="table-header">
                                <h3>Geçmiş Sınav Sonuçlarım</h3>
                            </div>
                            <div class="table-content">
                                <div class="result-row header">
                                    <div class="result-exam">Sınav Adı</div>
                                    <div class="result-date">Tarih</div>
                                    <div class="result-score">Puan</div>
                                    <div class="result-correct">Doğru</div>
                                    <div class="result-wrong">Yanlış</div>
                                    <div class="result-success">Başarı %</div>
                                    <div class="result-action">İşlem</div>
                                </div>
                                <div id="exam-history-content">
                                    <div class="loading-row">
                                        <div class="loading-text">Sınav geçmişiniz yükleniyor...</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <style>
        .tab-container {
            background: var(--color-surface);
            border: 1px solid var(--color-border);
            border-radius: 16px;
            box-shadow: var(--shadow-medium);
            overflow: hidden;
        }

        .tab-buttons {
            display: flex;
            background: var(--color-surface-hover);
            border-bottom: 1px solid var(--color-border);
        }

        .tab-button {
            flex: 1;
            padding: 16px 24px;
            background: none;
            border: none;
            cursor: pointer;
            font-family: 'Inter', sans-serif;
            font-weight: 500;
            color: var(--color-text-secondary);
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .tab-button:hover {
            background: var(--color-surface-hover);
            color: var(--color-primary);
        }

        .tab-button.active {
            background: var(--color-surface);
            color: var(--color-primary);
            border-bottom: 2px solid var(--color-primary);
        }

        .tab-panel {
            display: none;
            padding: 30px;
        }

        .tab-panel.active {
            display: block;
        }

        .exam-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }

        .exam-card {
            background: var(--color-surface);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            padding: 24px;
            transition: all 0.3s ease;
        }

        .exam-card:hover {
            border-color: var(--color-primary);
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }

        .exam-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 16px;
        }

        .exam-header h3 {
            margin: 0;
            color: var(--color-text-primary);
            font-size: 1.1rem;
        }

        .exam-difficulty {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .exam-difficulty.easy {
            background: #d1fae5;
            color: var(--color-success);
        }

        .exam-difficulty.medium {
            background: #fed7aa;
            color: var(--color-accent);
        }

        .exam-difficulty.hard {
            background: #fecaca;
            color: var(--color-error);
        }

        .exam-info {
            display: flex;
            gap: 16px;
            margin-bottom: 12px;
            font-size: 0.9rem;
            color: var(--color-text-secondary);
        }

        .exam-info span {
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .btn-start-exam {
            width: 100%;
            background: var(--color-primary);
            color: var(--color-text-inverse);
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .btn-start-exam:hover {
            background: var(--color-primary-dark);
            transform: translateY(-1px);
            box-shadow: var(--shadow-medium);
        }

        .custom-exam-form {
            max-width: 600px;
            margin: 0 auto;
        }

        .custom-exam-form h3 {
            color: var(--color-text-primary);
            margin-bottom: 30px;
            font-size: 1.5rem;
            font-weight: 600;
        }

        .exam-form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        .form-group label {
            font-weight: 600;
            color: var(--color-text-primary);
        }

        .form-group input,
        .form-group select {
            padding: 12px 16px;
            border: 1px solid var(--color-border);
            border-radius: 8px;
            background: var(--color-surface);
            color: var(--color-text-primary);
            font-family: 'Inter', sans-serif;
            transition: all 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: var(--color-primary);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

        .btn-create-exam {
            background: var(--color-primary);
            color: var(--color-text-inverse);
            border: none;
            padding: 16px 32px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .btn-create-exam:hover {
            background: var(--color-primary-dark);
            transform: translateY(-1px);
            box-shadow: var(--shadow-medium);
        }

        .results-table {
            background: var(--color-surface);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            overflow: hidden;
            box-shadow: var(--shadow-medium);
        }

        .table-header {
            background: var(--color-primary);
            color: var(--color-text-inverse);
            padding: 20px;
        }

        .table-header h3 {
            margin: 0;
            font-size: 1.3rem;
            font-weight: 600;
        }

        .result-row {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr 1fr;
            padding: 16px 20px;
            border-bottom: 1px solid var(--color-border);
            align-items: center;
        }

        .result-row.header {
            background: var(--color-surface-hover);
            font-weight: 600;
            color: var(--color-text-primary);
        }

        .result-row:last-child {
            border-bottom: none;
        }

        .result-row:hover {
            background: var(--color-surface-hover);
        }

        .result-exam, .result-date, .result-score, .result-correct, .result-wrong, .result-success {
            color: var(--color-text-secondary);
        }

        .result-exam {
            font-weight: 500;
            color: var(--color-text-primary);
        }

        .btn-view-result {
            background: var(--color-primary);
            color: var(--color-text-inverse);
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .btn-view-result:hover {
            background: var(--color-primary-dark);
            transform: translateY(-1px);
        }

        .loading-row {
            padding: 40px 20px;
            text-align: center;
        }

        .loading-text {
            color: var(--color-text-secondary);
            font-style: italic;
        }

        .no-results-row {
            padding: 40px 20px;
            text-align: center;
        }

        .no-results-text {
            color: var(--color-text-secondary);
            font-style: italic;
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {

            const tabButtons = document.querySelectorAll('.tab-button');
            const tabPanels = document.querySelectorAll('.tab-panel');

            tabButtons.forEach(button => {
                button.addEventListener('click', function() {
                    tabButtons.forEach(btn => btn.classList.remove('active'));
                    tabPanels.forEach(panel => panel.classList.remove('active'));

                    this.classList.add('active');

                    const targetTabId = this.getAttribute('data-tab');
                    document.getElementById(targetTabId).classList.add('active');

                    // Geçmiş sonuçlar tabına tıklandığında veriyi yükle
                    if (targetTabId === 'past-results') {
                        loadExamHistory();
                    }
                });
            });

            const examSubjectSelect = document.getElementById('exam-subject');
            const examTopicSelect = document.getElementById('exam-topic');
            
            if (examSubjectSelect && examTopicSelect) {
                examSubjectSelect.addEventListener('change', function() {
                    const selectedSubjectId = this.value;
                    
                    examTopicSelect.innerHTML = '<option value="">Konu yükleniyor...</option>';
                    examTopicSelect.disabled = true;
                    
                    if (selectedSubjectId) {
                        fetch(`/User/GetTopicsBySubject?subjectId=${selectedSubjectId}`)
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Konular yüklenirken hata oluştu');
                                }
                                return response.json();
                            })
                            .then(data => {
                                examTopicSelect.innerHTML = '<option value="">Konu Seçin</option>';
                                data.forEach(topic => {
                                    const option = document.createElement('option');
                                    option.value = topic.id;
                                    option.textContent = topic.topicName;
                                    examTopicSelect.appendChild(option);
                                });
                                examTopicSelect.disabled = false;
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                examTopicSelect.innerHTML = '<option value="">Hata oluştu</option>';
                                examTopicSelect.disabled = false;
                            });
                    } else {
                        examTopicSelect.innerHTML = '<option value="">Önce ders seçiniz</option>';
                        examTopicSelect.disabled = false;
                    }
                });
            }

                                        const customExamForm = document.getElementById('customExamForm');
            if (customExamForm) {
                customExamForm.addEventListener('submit', function(e) {
                    e.preventDefault();

                    const form = this;
                    const formData = new FormData(form);
                    const button = form.querySelector('.btn-create-exam');
                    const originalButtonText = button.innerHTML;

                    const testName = formData.get('TestName');
                    const subjectId = formData.get('SubjectId');
                    const topicId = formData.get('TopicId');
                    const questionCount = formData.get('QuestionCount');
                    const durationMinutes = formData.get('DurationMinutes');

                    if (!testName || !subjectId || !topicId || !questionCount || !durationMinutes) {
                        alert('Lütfen tüm alanları doldurun.');
                        return;
                    }

                    if (parseInt(questionCount) < 5 || parseInt(questionCount) > 50) {
                        alert('Soru sayısı 5 ile 50 arasında olmalıdır.');
                        return;
                    }

                    if (parseInt(durationMinutes) < 10 || parseInt(durationMinutes) > 180) {
                        alert('Süre 10 ile 180 dakika arasında olmalıdır.');
                        return;
                    }

                    button.disabled = true;
                    button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Oluşturuluyor...';

                    fetch(form.action, {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(err => { throw new Error(err.message || 'Bir sunucu hatası oluştu.'); });
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            alert(data.message+"şimdi teste yönlendirliyorsunuz.");
                            form.reset();
                            window.location.href = `/User/CustomExam?examId=${data.examId}`;
                        } else {
                            alert('Hata: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Hata: ' + error.message);
                    })
                    .finally(() => {
                        button.disabled = false;
                        button.innerHTML = originalButtonText;
                    });
                });
            }

            function loadExamHistory() {
                const examHistoryContent = document.getElementById('exam-history-content');
                
                fetch('/User/GetUserExamHistory')
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Sınav geçmişi yüklenirken hata oluştu');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data && data.length > 0) {
                            examHistoryContent.innerHTML = '';
                            data.forEach(exam => {
                                const row = document.createElement('div');
                                row.className = 'result-row';
                                row.innerHTML = `
                                    <div class="result-exam">${exam.examName}</div>
                                    <div class="result-date">${exam.date}</div>
                                    <div class="result-score">${exam.score}</div>
                                    <div class="result-correct">${exam.correctAnswers}</div>
                                    <div class="result-wrong">${exam.wrongAnswers}</div>
                                    <div class="result-success">${exam.successRate}%</div>
                                    <div class="result-action">
                                        <button class="btn-view-result" onclick="viewExamResult('${exam.examId}')">
                                            <i class="fas fa-eye"></i>
                                            Görüntüle
                                        </button>
                                    </div>
                                `;
                                examHistoryContent.appendChild(row);
                            });
                        } else {
                            examHistoryContent.innerHTML = `
                                <div class="no-results-row">
                                    <div class="no-results-text">Henüz tamamlanmış sınavınız bulunmamaktadır.</div>
                                </div>
                            `;
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        examHistoryContent.innerHTML = `
                            <div class="no-results-row">
                                <div class="no-results-text">Sınav geçmişi yüklenirken hata oluştu.</div>
                            </div>
                        `;
                    });
            }

            function viewExamResult(examId) {
                alert('Sınav detayları gösterimi henüz geliştirilmemiştir. Sınav ID: ' + examId);
            }
        });
    </script>
</body>
</html> 