@model AkademikAi.Entity.Entites.AppUser
@{
    ViewData["Title"] = "Odaklanma Alanı - AkademikAI";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link rel="stylesheet" href="~/css/dashboard-new.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <h2 class="logo">AkademikAI</h2>
            </div>
            <nav class="sidebar-nav">
                <a href="@Url.Action("Dashboard", "User")" class="nav-link">
                    <i class="fas fa-compass"></i>
                    <span>Pusulanız</span>
                </a>
                <a href="@Url.Action("Solve", "User")" class="nav-link active">
                    <i class="fas fa-brain"></i>
                    <span>Odaklanma Alanı</span>
                </a>
                <a href="@Url.Action("Performance", "User")" class="nav-link">
                    <i class="fas fa-chart-line"></i>
                    <span>MR Sonuçlarınız</span>
                </a>
                <a href="@Url.Action("Exams", "User")" class="nav-link">
                    <i class="fas fa-clipboard-check"></i>
                    <span>Simülasyon Merkezi</span>
                </a>
                <a href="@Url.Action("Profile", "User")" class="nav-link">
                    <i class="fas fa-user-circle"></i>
                    <span>Kişisel Alan</span>
                </a>
            </nav>
            <div class="sidebar-footer">
                <form asp-action="Logout" asp-controller="User" method="post" style="display: inline;">
                    <button type="submit" class="logout-btn">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Çıkış Yap</span>
                    </button>
                </form>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <header class="main-header">
                <h1>Odaklanma Alanı</h1>
                <p>Kayıtlı sınavlarınıza katılın, özel test oluşturun ve sonuçlarınızı takip edin.</p>
            </header>

            <!-- Tab Navigation -->
            <div class="tab-container">
                <div class="tab-buttons">
                    <button class="tab-button active" data-tab="registered-exams">
                        <i class="fas fa-calendar-check"></i>
                        Kayıtlı Sınavlarım
                    </button>
                    <button class="tab-button" data-tab="practice-mode">
                        <i class="fas fa-dumbbell"></i>
                        Pratik Modu
                    </button>
                    <button class="tab-button" data-tab="exam-results">
                        <i class="fas fa-chart-bar"></i>
                        Sınav Sonuçlarım
                    </button>
                </div>

                <!-- Tab Content -->
                <div class="tab-content">
                    <!-- Kayıtlı Sınavlarım Tab -->
                    <div id="registered-exams" class="tab-panel active">
                        <div class="section-header">
                            <h3>Kayıtlı Olduğunuz Sınavlar</h3>
                            <p>Kayıt olduğunuz sınavlara buradan katılabilirsiniz.</p>
                </div>
                        
                        <div class="exam-grid" id="registered-exams-grid">
                            <div class="loading-message">
                                <i class="fas fa-spinner fa-spin"></i>
                                <span>Kayıtlı sınavlarınız yükleniyor...</span>
                        </div>
                    </div>
                </div>

                    <!-- Pratik Modu Tab -->
                    <div id="practice-mode" class="tab-panel">
                        <div class="section-header">
                            <h3>Pratik Çalışma Modu</h3>
                            <p>Konu bazlı sorular çözerek kendinizi geliştirin.</p>
                        </div>

                        <div class="practice-options">
                            <div class="practice-card">
                                <div class="practice-icon">
                                    <i class="fas fa-random"></i>
                        </div>
                                <h4>Rastgele Sorular</h4>
                                <p>Karışık konulardan rastgele sorular çözün</p>
                                <button class="btn-practice" onclick="startRandomPractice()">
                                    <i class="fas fa-play"></i>
                                    Başla
                                </button>
                            </div>

                            <div class="practice-card">
                                <div class="practice-icon">
                                    <i class="fas fa-target"></i>
                                </div>
                                <h4>Konu Odaklı</h4>
                                <p>Belirli bir konudan sorular seçin</p>
                                <button class="btn-practice" onclick="showTopicSelection()">
                                    <i class="fas fa-list"></i>
                                    Konu Seç
                                </button>
                            </div>

                            <div class="practice-card">
                                <div class="practice-icon">
                                    <i class="fas fa-heart-broken"></i>
                                </div>
                                <h4>Zayıf Konularım</h4>
                                <p>Başarı oranı düşük konulardan çalışın</p>
                                <button class="btn-practice" onclick="startWeakTopicsPractice()">
                                    <i class="fas fa-chart-line"></i>
                                    Çalış
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Sınav Sonuçlarım Tab -->
                    <div id="exam-results" class="tab-panel">
                        <div class="section-header">
                            <h3>Sınav Sonuçlarım</h3>
                            <p>Tamamladığınız sınavların detaylı sonuçları.</p>
                        </div>

                        <div class="results-summary">
                            <div class="summary-card">
                                <div class="summary-icon">
                                    <i class="fas fa-clipboard-check"></i>
                    </div>
                                <div class="summary-info">
                                    <h4 id="total-exams">0</h4>
                                    <p>Toplam Sınav</p>
                </div>
            </div>

                            <div class="summary-card">
                                <div class="summary-icon">
                                    <i class="fas fa-percentage"></i>
                    </div>
                                <div class="summary-info">
                                    <h4 id="average-score">0%</h4>
                                    <p>Ortalama Başarı</p>
                    </div>
                </div>

                            <div class="summary-card">
                                <div class="summary-icon">
                                    <i class="fas fa-trophy"></i>
                                </div>
                                <div class="summary-info">
                                    <h4 id="best-score">0%</h4>
                                    <p>En İyi Sonuç</p>
                                </div>
                </div>
            </div>

                        <div class="results-table">
                            <div class="table-header">
                                <h4>Detaylı Sonuçlar</h4>
                            </div>
                            <div class="table-content">
                                <div class="result-row header">
                                    <div class="result-exam">Sınav Adı</div>
                                    <div class="result-date">Tarih</div>
                                    <div class="result-score">Puan</div>
                                    <div class="result-correct">Doğru</div>
                                    <div class="result-wrong">Yanlış</div>
                                    <div class="result-success">Başarı %</div>
                                    <div class="result-action">İşlem</div>
                                </div>
                                <div id="exam-results-content">
                                    <div class="loading-row">
                                        <div class="loading-text">Sınav sonuçlarınız yükleniyor...</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <style>
        .tab-container {
            background: var(--color-surface);
            border: 1px solid var(--color-border);
            border-radius: 16px;
            box-shadow: var(--shadow-medium);
            overflow: hidden;
        }

        .tab-buttons {
            display: flex;
            background: var(--color-surface-hover);
            border-bottom: 1px solid var(--color-border);
        }

        .tab-button {
            flex: 1;
            padding: 16px 24px;
            background: none;
            border: none;
            cursor: pointer;
            font-family: 'Inter', sans-serif;
            font-weight: 500;
            color: var(--color-text-secondary);
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .tab-button:hover {
            background: var(--color-surface-hover);
            color: var(--color-primary);
        }

        .tab-button.active {
            background: var(--color-surface);
            color: var(--color-primary);
            border-bottom: 2px solid var(--color-primary);
        }

        .tab-panel {
            display: none;
            padding: 30px;
        }

        .tab-panel.active {
            display: block;
        }

        .section-header {
            margin-bottom: 30px;
            text-align: center;
        }

        .section-header h3 {
            color: var(--color-text-primary);
            margin-bottom: 8px;
            font-size: 1.5rem;
        }

        .section-header p {
            color: var(--color-text-secondary);
            font-size: 1rem;
        }

        .exam-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .exam-card {
            background: var(--color-surface);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            padding: 24px;
            transition: all 0.3s ease;
            position: relative;
        }

        .exam-card:hover {
            border-color: var(--color-primary);
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }

        .exam-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 16px;
        }

        .exam-header h4 {
            margin: 0;
            color: var(--color-text-primary);
            font-size: 1.1rem;
        }

        .exam-status {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .exam-status.scheduled {
            background: #e3f2fd;
            color: #1976d2;
        }

        .exam-status.inprogress {
            background: #e8f5e8;
            color: #2e7d32;
        }

        .exam-status.completed {
            background: #f3e5f5;
            color: #7b1fa2;
        }

        .exam-info {
            display: flex;
            flex-direction: column;
            gap: 8px;
            margin-bottom: 16px;
            font-size: 0.9rem;
            color: var(--color-text-secondary);
        }

        .exam-info span {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-start-exam {
            width: 100%;
            background: var(--color-primary);
            color: var(--color-text-inverse);
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .btn-start-exam:hover:not(:disabled) {
            background: var(--color-primary-dark);
            transform: translateY(-1px);
        }

        .btn-start-exam:disabled {
            background: #95a5a6;
            cursor: not-allowed;
            transform: none;
        }

        .practice-options {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .practice-card {
            background: var(--color-surface);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            padding: 24px;
            text-align: center;
            transition: all 0.3s ease;
        }

        .practice-card:hover {
            border-color: var(--color-primary);
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }

        .practice-icon {
            width: 60px;
            height: 60px;
            background: var(--color-primary);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 16px;
            color: white;
            font-size: 1.5rem;
        }

        .practice-card h4 {
            color: var(--color-text-primary);
            margin-bottom: 8px;
        }

        .practice-card p {
            color: var(--color-text-secondary);
            margin-bottom: 20px;
            font-size: 0.9rem;
        }

        .btn-practice {
            background: var(--color-primary);
            color: var(--color-text-inverse);
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            width: 100%;
        }

        .btn-practice:hover {
            background: var(--color-primary-dark);
            transform: translateY(-1px);
        }

        .results-summary {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .summary-card {
            background: var(--color-surface);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            padding: 24px;
            display: flex;
            align-items: center;
            gap: 16px;
        }

        .summary-icon {
            width: 50px;
            height: 50px;
            background: var(--color-primary);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
        }

        .summary-info h4 {
            margin: 0;
            color: var(--color-text-primary);
            font-size: 1.8rem;
            font-weight: 700;
        }

        .summary-info p {
            margin: 4px 0 0;
            color: var(--color-text-secondary);
            font-size: 0.9rem;
        }

        .results-table {
            background: var(--color-surface);
            border: 1px solid var(--color-border);
            border-radius: 12px;
            overflow: hidden;
            box-shadow: var(--shadow-medium);
        }

        .table-header {
            background: var(--color-primary);
            color: var(--color-text-inverse);
            padding: 20px;
        }

        .table-header h4 {
            margin: 0;
            font-size: 1.2rem;
            font-weight: 600;
        }

        .result-row {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr 1fr;
            padding: 16px 20px;
            border-bottom: 1px solid var(--color-border);
            align-items: center;
        }

        .result-row.header {
            background: var(--color-surface-hover);
            font-weight: 600;
            color: var(--color-text-primary);
        }

        .result-row:last-child {
            border-bottom: none;
        }

        .result-row:hover:not(.header) {
            background: var(--color-surface-hover);
        }

        .loading-message, .loading-row {
            padding: 40px 20px;
            text-align: center;
            color: var(--color-text-secondary);
        }

        .loading-text {
            color: var(--color-text-secondary);
            font-style: italic;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--color-text-secondary);
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 16px;
            color: var(--color-text-secondary);
        }

        .empty-state h4 {
            margin-bottom: 8px;
            color: var(--color-text-primary);
        }

        .btn-view-result {
            background: var(--color-primary);
            color: var(--color-text-inverse);
            border: none;
            padding: 8px 16px;
            border-radius: 6px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .btn-view-result:hover {
            background: var(--color-primary-dark);
            transform: translateY(-1px);
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Tab işlemleri
            const tabButtons = document.querySelectorAll('.tab-button');
            const tabPanels = document.querySelectorAll('.tab-panel');

            tabButtons.forEach(button => {
                button.addEventListener('click', function() {
                    tabButtons.forEach(btn => btn.classList.remove('active'));
                    tabPanels.forEach(panel => panel.classList.remove('active'));

                    this.classList.add('active');
                    const targetTabId = this.getAttribute('data-tab');
                    document.getElementById(targetTabId).classList.add('active');

                    // Tab değiştirme sırasında verileri yükle
                    if (targetTabId === 'registered-exams') {
                        loadRegisteredExams();
                    } else if (targetTabId === 'exam-results') {
                        loadExamResults();
                    }
                });
            });

            // Sayfa yüklendiğinde kayıtlı sınavları getir
            loadRegisteredExams();
        });

        function loadRegisteredExams() {
            const examGrid = document.getElementById('registered-exams-grid');
            examGrid.innerHTML = '<div class="loading-message"><i class="fas fa-spinner fa-spin"></i><span>Kayıtlı sınavlarınız yükleniyor...</span></div>';

            fetch('/User/GetUserRegisteredExamsForSolve')
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.exams.length > 0) {
                        examGrid.innerHTML = '';
                        data.exams.forEach(exam => {
                            const examCard = createExamCard(exam);
                            examGrid.appendChild(examCard);
                        });
                    } else {
                        examGrid.innerHTML = `
                            <div class="empty-state">
                                <i class="fas fa-calendar-times"></i>
                                <h4>Kayıtlı Sınavınız Bulunmuyor</h4>
                                <p>Simülasyon Merkezi'nden sınavlara kayıt olabilirsiniz.</p>
                                <a href="/User/Exams" class="btn-start-exam" style="max-width: 200px; margin: 16px auto 0;">
                                    <i class="fas fa-plus"></i>
                                    Sınava Kayıt Ol
                                </a>
                            </div>
                        `;
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    examGrid.innerHTML = `
                        <div class="empty-state">
                            <i class="fas fa-exclamation-triangle"></i>
                            <h4>Hata Oluştu</h4>
                            <p>Kayıtlı sınavlar yüklenirken bir hata oluştu.</p>
                        </div>
                    `;
                });
        }

        function createExamCard(exam) {
            const card = document.createElement('div');
            card.className = 'exam-card';

            const statusClass = exam.status.toLowerCase().replace('inprogress', 'inprogress');
            const statusText = exam.status === 'Scheduled' ? 'Programlı' : 
                              exam.status === 'InProgress' ? 'Devam Ediyor' : 'Tamamlandı';

            let buttonHtml = '';
            if (exam.canStart) {
                buttonHtml = `<button class="btn-start-exam" onclick="startExam('${exam.id}')">
                    <i class="fas fa-play"></i>
                    Sınava Başla
                </button>`;
            } else if (exam.status === 'Scheduled') {
                buttonHtml = `<button class="btn-start-exam" disabled>
                    <i class="fas fa-clock"></i>
                    Henüz Başlamadı
                </button>`;
            } else {
                buttonHtml = `<button class="btn-start-exam" disabled>
                    <i class="fas fa-check"></i>
                    Tamamlandı
                </button>`;
            }

            card.innerHTML = `
                <div class="exam-header">
                    <h4>${exam.title}</h4>
                    <span class="exam-status ${statusClass}">${statusText}</span>
                </div>
                <div class="exam-info">
                    <span><i class="fas fa-clock"></i> ${exam.durationMinutes} dakika</span>
                    <span><i class="fas fa-calendar"></i> ${exam.startTime}</span>
                    ${exam.description ? `<span><i class="fas fa-info-circle"></i> ${exam.description}</span>` : ''}
                </div>
                ${buttonHtml}
            `;

            return card;
        }

        function startExam(examId) {
            if (confirm('Sınavı başlatmak istediğinizden emin misiniz?')) {
                window.location.href = `/User/StartAndGetExam?examId=${examId}`;
            }
        }

        function loadExamResults() {
            const examResultsContent = document.getElementById('exam-results-content');
            
            fetch('/User/GetUserExamHistory')
                .then(response => response.json())
                .then(data => {
                    if (data && data.length > 0) {
                        examResultsContent.innerHTML = '';
                        
                        // Özet bilgileri güncelle
                        updateSummaryStats(data);
                        
                        data.forEach(exam => {
                            const row = document.createElement('div');
                            row.className = 'result-row';
                            row.innerHTML = `
                                <div class="result-exam">${exam.examName}</div>
                                <div class="result-date">${exam.date}</div>
                                <div class="result-score">${exam.score}</div>
                                <div class="result-correct">${exam.correctAnswers}</div>
                                <div class="result-wrong">${exam.wrongAnswers}</div>
                                <div class="result-success">${exam.successRate}%</div>
                                <div class="result-action">
                                    <button class="btn-view-result" onclick="viewExamResult('${exam.examId}')">
                                        <i class="fas fa-eye"></i>
                                        Görüntüle
                                    </button>
                                </div>
                            `;
                            examResultsContent.appendChild(row);
                        });
                    } else {
                        examResultsContent.innerHTML = `
                            <div class="loading-row">
                                <div class="loading-text">Henüz tamamlanmış sınavınız bulunmamaktadır.</div>
                            </div>
                        `;
                        updateSummaryStats([]);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    examResultsContent.innerHTML = `
                        <div class="loading-row">
                            <div class="loading-text">Sınav sonuçları yüklenirken hata oluştu.</div>
                        </div>
                    `;
                });
        }

        function updateSummaryStats(examResults) {
            const totalExams = examResults.length;
            const averageScore = totalExams > 0 ? 
                (examResults.reduce((sum, exam) => sum + parseFloat(exam.successRate), 0) / totalExams).toFixed(1) : 0;
            const bestScore = totalExams > 0 ? 
                Math.max(...examResults.map(exam => parseFloat(exam.successRate))).toFixed(1) : 0;

            document.getElementById('total-exams').textContent = totalExams;
            document.getElementById('average-score').textContent = averageScore + '%';
            document.getElementById('best-score').textContent = bestScore + '%';
        }

        function viewExamResult(examId) {
            alert('Sınav detayları gösterimi henüz geliştirilmemiştir. Sınav ID: ' + examId);
        }

        // Pratik mod fonksiyonları
        function startRandomPractice() {
            alert('Rastgele pratik modu yakında eklenecek.');
        }

        function showTopicSelection() {
            alert('Konu seçimi yakında eklenecek.');
        }

        function startWeakTopicsPractice() {
            alert('Zayıf konular analizi yakında eklenecek.');
        }
    </script>
</body>
</html>
