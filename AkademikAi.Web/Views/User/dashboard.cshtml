@model AkademikAi.Web.Models.PerformanceViewModel
@{
    ViewData["Title"] = "Ana Sayfa - AkademikAI";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
         <link rel="stylesheet" href="~/css/dashboard.css">
     <link rel="stylesheet" href="~/css/dashboard-new.css" />
     <link rel="stylesheet" href="~/css/heatmap.css" />
     
     <!-- CSS yÃ¼klenme testi iÃ§in inline style -->
     <style>
         .heatmap-cell.color-level-1 { background-color: #9be9a8 !important; }
         .heatmap-cell.color-level-2 { background-color: #40c463 !important; }
         .heatmap-cell.color-level-3 { background-color: #30a14e !important; }
         .heatmap-cell.color-level-4 { background-color: #216e39 !important; }
     </style>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <h2 class="logo">AkademikAI</h2>
            </div>
            <nav class="sidebar-nav">
                <a href="@Url.Action("Dashboard", "User")" class="nav-link active">
                    <i class="fas fa-compass"></i>
                    <span>PusulanÄ±z</span>
                </a>
                <a href="@Url.Action("solve", "User")" class="nav-link">
                    <i class="fas fa-brain"></i>
                    <span>Odaklanma AlanÄ±</span>
                </a>
                <a href="@Url.Action("Performance", "User")" class="nav-link">
                    <i class="fas fa-chart-line"></i>
                    <span>MR SonuÃ§larÄ±nÄ±z</span>
                </a>
                <a href="@Url.Action("Exams", "User")" class="nav-link">
                    <i class="fas fa-clipboard-check"></i>
                    <span>SimÃ¼lasyon Merkezi</span>
                </a>
                <a href="@Url.Action("Profile", "User")" class="nav-link">
                    <i class="fas fa-user-circle"></i>
                    <span>KiÅŸisel Alan</span>
                </a>

            </nav>
            <div class="sidebar-footer">
                <form asp-action="Logout" asp-controller="User" method="post" style="display: inline;">
                    <button type="submit" class="logout-btn">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Ã‡Ä±kÄ±ÅŸ Yap</span>
                    </button>
                </form>
            </div>
        </aside>

        <!-- ANA Ä°Ã‡ERÄ°K ALANI -->
        <main class="main-content">
            <!-- BaÅŸarÄ± mesajÄ± -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="message message-success">
                    <span>@TempData["SuccessMessage"]</span>
                </div>
            }

            <header class="main-header">
                <h1>HoÅŸ geldin, @Model.User.Name @Model.User.Surname</h1>
                <p>BugÃ¼n Ã¶ÄŸrenmeye hazÄ±r mÄ±sÄ±n?</p>
            </header>

            <!-- AI KoÃ§ KartÄ± -->
            <div class="card ai-coach-card">
                <div class="ai-coach-header">
                    <div class="ai-coach-icon">ðŸ’¡</div>
                    <h3 class="card-header" style="padding: 0; border: none;">AI KoÃ§ Ã–nerisi</h3>
                </div>
                <p class="ai-coach-message">
                    @* BurasÄ± ileride dinamikleÅŸecek *@
                    Matematik konusunda son 3 gÃ¼nde %15 gerileme gÃ¶steriyorsun.
                    Trigonometri konusuna odaklanmanÄ± Ã¶neriyorum. Hemen pratiÄŸe baÅŸlayalÄ±m!
                </p>
                <a href="#" class="ai-coach-action">Hemen PratiÄŸe BaÅŸla â†’</a>
            </div>

            <!-- Stats Grid -->
            <div class="stats-grid">
                <div class="card stat-card">
                    <span class="stat-label">Ã‡Ã¶zÃ¼len Soru</span>
                    <div class="stat-value">@Model.TotalQuestions</div>
                    <span class="stat-change @(Model.TotalQuestionsPercentageChange >= 0 ? "positive" : "negative")">
                        @Math.Abs(Model.TotalQuestionsPercentageChange).ToString("F0")%
                    </span>
                </div>
                <div class="card stat-card">
                    <span class="stat-label">Genel BaÅŸarÄ±</span>
                    <div class="stat-value">@Model.SuccessRatePercentageChange.ToString("F0")%</div>
                    <span class="stat-change @(Model.SuccessRatePercentageChange >= 0 ? "positive" : "negative")">
                        @Math.Abs(Model.SuccessRatePercentageChange).ToString("F0")%
                    </span>
                </div>
                <div class="card stat-card">
                    <span class="stat-label">Tamamlanan Denemeler</span> <!--Buraya Deneme SayÄ±sÄ± Eklenicek-->
                    <div class="stat-value">12</div>
                    <span class="stat-change positive">+8%</span>
                </div>
            </div>

            <!-- Aktivite IsÄ± HaritasÄ± KartÄ± -->
            <div class="card">
                <h3 class="card-header">Aktivite IsÄ± HaritasÄ± (Son 1 YÄ±l)</h3>

                <!-- YENÄ° ANA YAPI: IsÄ± haritasÄ± bileÅŸenlerini iÃ§eren layout -->
                <div class="heatmap-layout">
                    <!-- Ay isimlerinin JavaScript ile ekleneceÄŸi yer -->
                    <div class="month-labels" id="month-labels-container"></div>

                    <!-- Sabit gÃ¼n etiketleri -->
                    <div class="heatmap-labels">
                        <div class="day-label">Pzt</div>
                        <div class="day-label"></div>
                        <div class="day-label">Ã‡ar</div>
                        <div class="day-label"></div>
                        <div class="day-label">Cum</div>
                        <div class="day-label"></div>
                        <div class="day-label">Paz</div>
                    </div>

                    <!-- IzgaranÄ±n JavaScript ile doldurulacaÄŸÄ± sarmalayÄ±cÄ± -->
                    <div class="heatmap-grid-wrapper">
                        <!-- IsÄ± haritasÄ± kutularÄ±nÄ±n ekleneceÄŸi yer -->
                        <div class="heatmap-grid" id="heatmap-grid"></div>
                    </div>
                </div>
                <!-- / YENÄ° ANA YAPI SONU -->
                <!-- AÃ§Ä±klama (Legend) -->
                <div class="heatmap-legend">
                    <span>Az</span>
                    <span class="heatmap-legend-color" style="background-color:#EBEDF0"></span>
                    <span class="heatmap-legend-color" style="background-color:#9BE9A8"></span>
                    <span class="heatmap-legend-color" style="background-color:#40C463"></span>
                    <span class="heatmap-legend-color" style="background-color:#30A14E"></span>
                    <span class="heatmap-legend-color" style="background-color:#216E39"></span>
                    <span>Ã‡ok</span>
                </div>
            </div>

        </main>
    </div>

    <!-- Fare Ã¼zerine gelince gÃ¶rÃ¼necek ipucu (baÅŸlangÄ±Ã§ta gizli) -->
    <!-- Bu div'i body'nin sonuna eklemek, z-index sorunlarÄ±nÄ± Ã¶nlemeye yardÄ±mcÄ± olur. -->
    <div id="tooltip" class="heatmap-tooltip" style="display:none;"></div>

    <script>
        const grid = document.getElementById('heatmap-grid');
         const tooltip = document.getElementById('tooltip');
         const monthLabelsContainer = document.getElementById('month-labels-container');
         const activityData = @Html.Raw(Json.Serialize(Model.ActivitiesLastYear)) || [];

                  // Heatmap baÅŸlatÄ±lÄ±yor...

         // Elementler bulunamazsa iÅŸlemi durdur
         if (!grid || !tooltip || !monthLabelsContainer) {
             console.error('Heatmap iÃ§in gerekli HTML elementlerinden biri bulunamadÄ±!');
         } else {
             // 2. VERÄ°YÄ° "YYYY-MM-DD" ANAHTARLI BÄ°R NESNEYE DÃ–NÃœÅžTÃœR
             const activityMap = {};
                           activityData.forEach(item => {
                  // DateTime'Ä± string'e Ã§evir ve YYYY-MM-DD formatÄ±na getir
                  const dateStr = new Date(item.date).toISOString().substring(0, 10);
                  activityMap[dateStr] = item.questionCount;
              });
              
              // Veri aralÄ±ÄŸÄ±nÄ± bul
              const activityDates = Object.keys(activityMap);

             // 3. RENK SKALASI FONKSÄ°YONU
             function getColorClass(count) {
                 if (!count || count === 0) return 'color-level-0';
                 if (count >= 1 && count <= 5) return 'color-level-1';
                 if (count >= 6 && count <= 10) return 'color-level-2';
                 if (count >= 11 && count <= 20) return 'color-level-3';
                 if (count > 20) return 'color-level-4';
                 return 'color-level-0';
             }

             // 4. ISI HARÄ°TASI IZGARASINI OLUÅžTUR
                           grid.innerHTML = '';
              monthLabelsContainer.innerHTML = ''; // Ay etiketlerini de temizle

                           // Veri aralÄ±ÄŸÄ±na gÃ¶re tarih hesapla
              let startDate, endDate;
              
              if (activityDates.length > 0) {
                  // Veri varsa, veri aralÄ±ÄŸÄ±na gÃ¶re hesapla
                  const minDate = new Date(Math.min(...activityDates.map(d => new Date(d))));
                  const maxDate = new Date(Math.max(...activityDates.map(d => new Date(d))));
                  
                  // Veri yÄ±lÄ±ndan baÅŸla
                  startDate = new Date(minDate.getFullYear(), 0, 1); // YÄ±lÄ±n baÅŸÄ±
                  endDate = new Date(maxDate.getFullYear(), 11, 31); // YÄ±lÄ±n sonu
              } else {
                  // Veri yoksa, bugÃ¼nden 1 yÄ±l Ã¶ncesini al
                  endDate = new Date();
                  startDate = new Date();
                  startDate.setFullYear(startDate.getFullYear() - 1);
              }
              
              

             const firstDay = startDate.getDay();
             const emptyCellsAtStart = (firstDay === 0) ? 6 : firstDay - 1;

             for (let i = 0; i < emptyCellsAtStart; i++) {
                 grid.appendChild(document.createElement('div')).className = 'heatmap-cell';
             }

             const monthNames = ["Oca", "Åžub", "Mar", "Nis", "May", "Haz", "Tem", "AÄŸu", "Eyl", "Eki", "Kas", "Ara"];
             let currentMonth = -1;

                           for (let currentDate = new Date(startDate); currentDate <= endDate; currentDate.setDate(currentDate.getDate() + 1)) {
                 // Ay etiketlerini ekle
                 if (currentDate.getMonth() !== currentMonth) {
                      if (currentDate.getDate() === 1 || (currentDate.getTime() === startDate.getTime())) {
                         currentMonth = currentDate.getMonth();
                         const monthLabel = document.createElement('div');
                         monthLabel.className = 'month-label';
                         monthLabel.textContent = monthNames[currentMonth];
                         monthLabelsContainer.appendChild(monthLabel);
                     }
                 }

                 const year = currentDate.getFullYear();
                 const month = String(currentDate.getMonth() + 1).padStart(2, '0');
                 const day = String(currentDate.getDate()).padStart(2, '0');
                 const dateKey = `${year}-${month}-${day}`;

                                   const count = activityMap[dateKey] || 0;
                  
                  

                                   const cell = document.createElement('div');
                  cell.className = 'heatmap-cell';
                  cell.classList.add(getColorClass(count));
                  cell.dataset.date = dateKey;
                  cell.dataset.count = count;
                  
                  // HÃ¼creyi daha gÃ¶rÃ¼nÃ¼r yap
                  cell.style.width = '15px';
                  cell.style.height = '15px';
                  cell.style.borderRadius = '3px';
                  cell.style.border = '1px solid #e1e4e8';
                  cell.style.backgroundColor = '#ebedf0'; // VarsayÄ±lan renk
                  
                                     // Inline style da ekle (CSS yÃ¼klenmezse)
                   if (count > 0) {
                       const colorMap = {
                           'color-level-1': '#9be9a8',
                           'color-level-2': '#40c463',
                           'color-level-3': '#30a14e',
                           'color-level-4': '#216e39'
                       };
                       const colorClass = getColorClass(count);
                                               if (colorMap[colorClass]) {
                            cell.style.backgroundColor = colorMap[colorClass];
                        }
                   }
                  
                  

                                   cell.addEventListener('mouseover', (event) => {
                      const cellData = event.target.dataset;
                      const count = parseInt(cellData.count) || 0;
                      const readableDate = new Date(cellData.date + 'T12:00:00Z').toLocaleDateString('tr-TR', {
                          year: 'numeric', month: 'long', day: 'numeric'
                      });
                      
                      if (count > 0) {
                          tooltip.innerHTML = `<strong>${count} soru</strong><br>${readableDate}`;
                      } else {
                          tooltip.innerHTML = `<strong>0 soru</strong><br>${readableDate}`;
                      }
                      
                      tooltip.style.display = 'block';
                      tooltip.style.left = `${event.pageX + 10}px`;
                      tooltip.style.top = `${event.pageY + 10}px`;
                  });
                  cell.addEventListener('mouseout', () => { tooltip.style.display = 'none'; });

                 grid.appendChild(cell);
             }
             
             
         }
         
       
    </script>



  
</body>
</html>