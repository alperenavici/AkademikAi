@model AkademikAi.Web.Models.PerformanceViewModel
@{
    ViewData["Title"] = "MR Sonuçlarınız - AkademikAI";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/dashboard.css" />
    <link rel="stylesheet" href="~/css/dashboard-new.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <h2 class="logo">AkademikAI</h2>
            </div>
            <nav class="sidebar-nav">
                <a href="@Url.Action("Dashboard", "User")" class="nav-link">
                    <i class="fas fa-compass"></i>
                    <span>Pusulanız</span>
                </a>
                <a href="@Url.Action("Solve", "User")" class="nav-link">
                    <i class="fas fa-brain"></i>
                    <span>Odaklanma Alanı</span>
                </a>
                <a href="@Url.Action("Performance", "User")" class="nav-link active">
                    <i class="fas fa-chart-line"></i>
                    <span>MR Sonuçlarınız</span>
                </a>
                <a href="@Url.Action("Exams", "User")" class="nav-link">
                    <i class="fas fa-clipboard-check"></i>
                    <span>Simülasyon Merkezi</span>
                </a>
                <a href="@Url.Action("Profile", "User")" class="nav-link">
                    <i class="fas fa-user-circle"></i>
                    <span>Kişisel Alan</span>
                </a>
            </nav>
            <div class="sidebar-footer">
                <form asp-action="Logout" asp-controller="User" method="post" style="display: inline;">
                    <button type="submit" class="logout-btn">
                        <i class="fas fa-sign-out-alt"></i>
                        <span>Çıkış Yap</span>
                    </button>
                </form>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Success/Error Messages -->
            @if (TempData["SolveSuccessMessage"] != null)
            {
                <div class="alert alert-success" style="background-color: #d4edda; color: #155724; padding: 15px; margin: 15px; border-radius: 5px; border: 1px solid #c3e6cb;">
                    <i class="fas fa-check-circle"></i>
                    @TempData["SolveSuccessMessage"]
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger" style="background-color: #f8d7da; color: #721c24; padding: 15px; margin: 15px; border-radius: 5px; border: 1px solid #f5c6cb;">
                    <i class="fas fa-exclamation-circle"></i>
                    @TempData["ErrorMessage"]
                </div>
            }

            <header class="main-header">
                <h1>MR Sonuçlarınız </h1>
                <p>Detaylı performans analizi ve gelişim grafikleriniz.</p>
            </header>

            <!-- Filtreler -->
            <section class="filters-section">
                <div class="filter-container">
                    <div class="filter-group">
                        <label for="course-filter">Ders:</label>
                        <select id="course-filter" class="filter-select">
                            <option value="">Tüm Dersler</option>
                            @foreach (var topic in Model.AllTopics.Where(t => t.ParentTopicId == null))
                            {
                                <option value="@topic.Id">@topic.TopicName</option>
                            }
                        </select>
                    </div>
                    <div class="filter-group">
                        <label for="topic-filter">Konu:</label>
                        <select id="topic-filter" class="filter-select">
                            <option value="">Tüm Konular</option>
                            @foreach (var topic in Model.AllTopics.Where(t => t.ParentTopicId != null))
                            {
                                <option value="@topic.Id">@topic.TopicName</option>
                            }
                        </select>
                    </div>
                    <div class="filter-group">
                        <label for="date-filter">Tarih:</label>
                        <select id="date-filter" class="filter-select">
                            <option value="7">Son 7 Gün</option>
                            <option value="30" selected>Son 30 Gün</option>
                            <option value="90">Son 3 Ay</option>
                            <option value="365">Son 1 Yıl</option>
                        </select>
                    </div>
                </div>
            </section>

            <!-- Genel İstatistikler -->
            <section class="stats-section">
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-question-circle"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">@Model.TotalQuestions</div>
                            <div class="stat-label">Toplam Soru</div>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">@Model.TotalCorrectAnswers</div>
                            <div class="stat-label">Doğru Cevap</div>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-percentage"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">%@Math.Round(Model.AverageSuccessRate, 1)</div>
                            <div class="stat-label">Başarı Oranı</div>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value">@(Model.AverageTimePerQuestion > 0 ? Math.Round(Model.AverageTimePerQuestion, 1).ToString() : "N/A")</div>
                            <div class="stat-label">Ort. Süre (dk)</div>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Grafikler -->
            <section class="charts-section">
                <div class="chart-container">
                    <h3>Zamana Göre Gelişim Grafiği</h3>
                    <canvas id="progressChart" width="400" height="200"></canvas>
                </div>
            </section>

            <!-- Konu Kırılımı -->
            <section class="topic-breakdown">
                <h3>Konu Kırılımı</h3>
                <div class="topic-table">
                    <div class="topic-row header">
                        <div class="topic-name">Konu</div>
                        <div class="topic-stats">Soru Sayısı</div>
                        <div class="topic-success">Başarı Oranı</div>
                        <div class="topic-progress">İlerleme</div>
                    </div>
                    @if (Model.PerformanceSummaries.Any())
                    {
                        @foreach (var performance in Model.PerformanceSummaries.OrderByDescending(p => p.SuccessRate))
                        {
                            var topicName = Model.AllTopics.FirstOrDefault(t => t.Id == performance.TopicId)?.TopicName ?? "Bilinmeyen Konu";
                            <div class="topic-row">
                                <div class="topic-name">@topicName</div>
                                <div class="topic-stats">@performance.TotalQuestionsAnswered</div>
                                <div class="topic-success">%@Math.Round(performance.SuccessRate, 1)</div>
                                <div class="topic-progress">
                                    <div class="progress-bar">
                                        <div class="progress-fill" style="width: @(performance.SuccessRate)%;"></div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="topic-row">
                            <div class="topic-name" colspan="4" style="text-align: center; padding: 20px;">
                                Henüz performans verisi bulunmuyor. Soru çözmeye başlayın!
                            </div>
                        </div>
                    }
                </div>
            </section>

            <!-- AI Koç Önerileri -->
            <section class="ai-recommendations">
                <h3>AI Koç Önerileri</h3>
                <div class="recommendations-grid">
                    @if (Model.WeakestTopics.Any())
                    {
                        var weakestTopic = Model.WeakestTopics.First();
                        var topicName = Model.AllTopics.FirstOrDefault(t => t.Id == weakestTopic.TopicId)?.TopicName ?? "Bu Konu";
                        <div class="recommendation-card">
                            <div class="recommendation-icon">
                                <i class="fas fa-lightbulb"></i>
                            </div>
                            <div class="recommendation-content">
                                <h4>@topicName Konusunu Güçlendir</h4>
                                <p>Bu konudaki başarı oranın %@Math.Round(weakestTopic.SuccessRate, 1). @topicName sorularına daha fazla odaklanmanı öneriyorum.</p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="recommendation-card">
                            <div class="recommendation-icon">
                                <i class="fas fa-lightbulb"></i>
                            </div>
                            <div class="recommendation-content">
                                <h4>İlk Adımı At</h4>
                                <p>Henüz soru çözmeye başlamamışsın. İlk sorunu çözerek öğrenme yolculuğuna başla!</p>
                            </div>
                        </div>
                    }
                    
                    @if (Model.AverageSuccessRate > 0)
                    {
                        <div class="recommendation-card">
                            <div class="recommendation-icon">
                                <i class="fas fa-target"></i>
                            </div>
                            <div class="recommendation-content">
                                <h4>Hedefini Belirle</h4>
                                <p>Şu anki başarı oranın %@Math.Round(Model.AverageSuccessRate, 1). %90'ın üzerine çıkmak için düzenli çalışmaya devam et.</p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="recommendation-card">
                            <div class="recommendation-icon">
                                <i class="fas fa-target"></i>
                            </div>
                            <div class="recommendation-content">
                                <h4>Hedefini Belirle</h4>
                                <p>İlk hedefin günde en az 10 soru çözmek olsun. Düzenli çalışma ile başarıya ulaşacaksın.</p>
                            </div>
                        </div>
                    }
                    
                    <div class="recommendation-card">
                        <div class="recommendation-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div class="recommendation-content">
                            <h4>Günlük Hedef Belirle</h4>
                            <p>Günde en az 20 soru çözerek tutarlı bir ilerleme sağlayabilirsin. Düzenli çalışma anahtardır.</p>
                        </div>
                    </div>
                </div>
            </section>
        </main>
    </div>

    <script>
        let progressChart;

        // Grafik verilerini yükle
        async function loadChartData() {
            try {
                const response = await fetch('/User/GetPerformanceChartData');
                const result = await response.json();
                
                if (result.success) {
                    createChart(result.labels, result.data);
                } else {
                    console.error('Grafik verisi yüklenemedi:', result.message);
                    // Hata durumunda boş grafik oluştur
                    createChart([], []);
                }
            } catch (error) {
                console.error('Grafik verisi yüklenirken hata:', error);
                createChart([], []);
            }
        }

        // Chart.js ile gelişim grafiği oluştur
        function createChart(labels, data) {
            const ctx = document.getElementById('progressChart').getContext('2d');
            
            // Eğer önceki grafik varsa yok et
            if (progressChart) {
                progressChart.destroy();
            }
            
            progressChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels.length > 0 ? labels : ['Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi', 'Pazar'],
                    datasets: [{
                        label: 'Başarı Oranı (%)',
                        data: data.length > 0 ? data : [0, 0, 0, 0, 0, 0, 0],
                        borderColor: '#2563eb',
                        backgroundColor: 'rgba(37, 99, 235, 0.1)',
                        tension: 0.4,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            grid: {
                                color: 'rgba(37, 99, 235, 0.1)'
                            },
                            ticks: {
                                color: '#64748b',
                                callback: function(value) {
                                    return value + '%';
                                }
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(37, 99, 235, 0.1)'
                            },
                            ticks: {
                                color: '#64748b'
                            }
                        }
                    }
                }
            });
        }

        // Sayfa yüklendiğinde grafik verilerini yükle
        document.addEventListener('DOMContentLoaded', function() {
            loadChartData();
        });

        // Filtre değişikliklerini dinle
        document.getElementById('course-filter').addEventListener('change', function() {
            console.log('Ders filtresi değişti:', this.value);
            // Burada filtreleme işlemi yapılabilir
        });

        document.getElementById('topic-filter').addEventListener('change', function() {
            console.log('Konu filtresi değişti:', this.value);
            // Burada filtreleme işlemi yapılabilir
        });

        document.getElementById('date-filter').addEventListener('change', function() {
            console.log('Tarih filtresi değişti:', this.value);
            // Burada filtreleme işlemi yapılabilir
        });
    </script>
</body>
</html> 